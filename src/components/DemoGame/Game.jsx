import React, { useState } from "react";
import { Unity, useUnityContext } from "react-unity-webgl";
import styles from "./Game.module.css";
import { getImageUrl } from "../../utils";

const gamedir = "game/Build";

const Game = () => {
  const { unityProvider, isLoaded, loadingProgression, unload, requestFullscreen } = useUnityContext({
    loaderUrl: `${gamedir}/game.loader.js`,
    dataUrl: `${gamedir}/game.data`,
    frameworkUrl: `${gamedir}/game.framework.js`,
    codeUrl: `${gamedir}/game.wasm`,
  });
  const [showDemo, setShowDemo] = useState(true);

  const loadingPercentage = Math.round(loadingProgression * 100);

  const handleRunDemoClick = () => {
    setShowDemo(false);
  };

  async function handleClickBack() {
    await unload();
    setShowDemo(true);
  }

  async function handleClickEnterFullscreen() {
    requestFullscreen(true);
  }
  
  return (
    <section  id="demo">

      <h1 className={styles.title}> demo </h1>

      <div className={styles.container}>

        {showDemo ? (
          <div >

            <ul>

              <div className={styles.wholeFrame} >
                
                <div className={styles.contentHor}>

                  <div className={styles.gameCont}>
                    <div>
                      <h1 className={styles.lTitle}>Puzzle</h1>
                    </div>
                    <div className={styles.contentHor2}>
                      <div> {/* image need to be box shaped  */}
                        <img src="/Scr/Scr.png" alt="screenshot_0" className={styles.imgg} />
                      </div>
                      <div className={styles.contentt}> {/* content */}
                        <p>
                          Basic "Toon blast" puzzle.<br/>
                          Level objectives generate random on start.<br/>
                          Board and tiles layout is<br/> generated by image.(in progress)
                        </p>
                      </div>
                    </div>

                  </div>

                  <div>

                    <div className={styles.gameCont}>

                      <div>
                        <h1 className={styles.rTitle}>Right game (In progress)</h1>
                      </div>
                      <div className={styles.contentHor2}>
                        <div className={styles.contentt}> {/* content */}
                          <p>
                            Basic shooter,<br/>
                            Basic movement procedural animations<br/>
                            Arena fights with wafes<br/>
                          </p>
                        </div>
                        <div> {/* image need to be box shaped  */}
                          <img src="/Scr/Scr.png" alt="demo screenshot 2" className={styles.imgg} />
                        </div>
                      </div>

                    </div>
                  </div>
                </div>

              </div>
            </ul>

            <div >

              <li className={styles.cos} >
                <div className={styles.text}>
                  Demo is not done yet! I'm making it in my free time, which i dont have so much
                  <br />
                  Feel free to tell me what you think about it so far.  <br /><br />
                  If you have any feedback or you want to know more, feel free to contact me.

                </div>
              </li>

              <div className={styles.buttonHor}>

                <li className={styles.button} >
                  <div >
                    <a className={styles.buttonText} onClick={handleRunDemoClick}>Run Demo</a>
                  </div>
                </li>

                <li className={styles.button} >
                  <div >
                    <a href="#contact" className={styles.buttonText}>Contact</a>
                  </div>
                </li>

              </div>

            </div>

          </div>
        ) : (

          <div>
            {isLoaded ? (null
            ) : (
              <div className={styles.loading}>
                <p >Loading app... {loadingPercentage}%</p>
              </div>
            )}

            <Unity
              className={styles.unityContent}
              style={{ visibility: isLoaded ? "visible" : "hidden" }}
              unityProvider={unityProvider} />



            <button onClick={handleClickBack}>Back</button>
            <button onClick={handleClickEnterFullscreen}>fullscreen</button>

          </div>
        )}

      </div>
    </section>
  );
};

export default Game;
